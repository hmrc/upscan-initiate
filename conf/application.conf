
# This is the main configuration file for the application.
# ~~~~~

appName=upscan-initiate

play.modules.enabled += "com.kenshoo.play.metrics.PlayModule"

#Required for object based play2.5 applications
play.http.requestHandler = "play.api.http.GlobalSettingsHttpRequestHandler"

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.MicroserviceModule"

play.modules.enabled += "UpscanInitiateModule"
play.modules.enabled += "connectors.s3.S3Module"

play.http.filters = "uk.gov.hmrc.play.bootstrap.filters.MicroserviceFilters"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.http.JsonErrorHandler"

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="mKW4mMngaPz1UVOrEkgkJrZT9kloW9Neva5wUFDUq84n9xlz42lQMGrtlrQ2bMF4"

# Session configuration
# ~~~~~
application.session.httpOnly=false

application.session.secure=false

# The application languages
# ~~~~~
application.langs="en"

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
application.router=prod.Routes


# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and 
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule. 

controllers {
  com.kenshoo.play.metrics.MetricsController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }
}

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
    name = ${appName}
    rateUnit = SECONDS
    durationUnit = SECONDS
    showSamples = true
    jvm = true
    enabled = true
}

aws {
  s3 {
    region = "eu-west-2"
    bucket.inbound = "ENTER YOUR INBOUND BUCKET NAME"
    bucket.inbound = ${?AWS_S3_BUCKET_INBOUND}
    upload.link.validity.duration = "7 days"
  }

  accessKeyId = "ENTER YOUR KEY"
  secretAccessKey = "ENYER YOUR SECRET"
  accessKeyId = ${?AWS_ACCESS_KEY_ID}
  secretAccessKey = ${?AWS_SECRET_ACCESS_KEY}
  sessionToken = ${?AWS_SESSION_TOKEN}
}

global.file.size.limit = 104857600

userAgentFilter.allowedUserAgents = ""

  # Microservice specific config

  Test {
    auditing {
      enabled=true
      traceRequests=true
      consumer {
        baseUri {
          host = localhost
          port = 11111
        }
      }
    }

    microservice {
      metrics {
        graphite {
          enabled = false
        }
        gauges {
          interval = 1 second
        }
      }
    }
  }

  Dev {
    auditing {
      enabled=true
      traceRequests=true
      consumer {
        baseUri {
          host = localhost
          port = 8100
        }
      }
    }

    microservice {
      metrics {
        graphite {
          enabled = false
        }
        gauges {
          interval = 1 second
        }
      }

    }

  }

  Prod {
    auditing {
      enabled = true
      traceRequests = true
      consumer {
        baseUri {
          host = datastream.protected.mdtp
          port = 80
        }
      }
    }

    microservice {
      metrics {
        graphite {
          host = graphite
          port = 2003
          prefix = play.${appName}.
          enabled = true
        }
        gauges {
          interval = 1 minute
        }
      }

    }

  }
