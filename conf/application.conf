# Copyright 2022 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~
include "backend.conf"

appName=upscan-initiate

play.modules.enabled += "com.kenshoo.play.metrics.PlayModule"

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.backend.BackendModule"

play.modules.enabled += "UpscanInitiateModule"
play.modules.enabled += "connectors.s3.S3Module"

play.http.filters = "uk.gov.hmrc.play.bootstrap.backend.filters.BackendFilters"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.backend.http.JsonErrorHandler"

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.http.secret.key="mKW4mMngaPz1UVOrEkgkJrZT9kloW9Neva5wUFDUq84n9xlz42lQMGrtlrQ2bMF4"

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router=prod.Routes


# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  name = ${appName}
  enabled = true
}

uploadProxy.url = "ENTER UPLOAD PROXY URL"

aws {
  s3 {
    region = "eu-west-2"
    bucket.inbound = "ENTER YOUR INBOUND BUCKET NAME"
    bucket.inbound = ${?AWS_S3_BUCKET_INBOUND}
    upload.link.validity.duration = "7 days"
  }

  accessKeyId = "ENTER YOUR KEY"
  secretAccessKey = "ENYER YOUR SECRET"
  accessKeyId = ${?AWS_ACCESS_KEY_ID}
  secretAccessKey = ${?AWS_SECRET_ACCESS_KEY}
  sessionToken = ${?AWS_SESSION_TOKEN}
}

callbackValidation.allowedProtocols = "https"

global.file.size.limit = 104857600

auditing {
  enabled = false
  traceRequests = true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}